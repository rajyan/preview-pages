name: Preview Pages
description: Action to deploy GitHub Pages for each branch, pull request, commit

branding:
  icon: copy
  color: blue

inputs:
  token:
    description: >
      The GitHub App token or personal access token to access GitHub Pages publishing repository.
      Defaults to the repository scoped GitHub token (Which means that the repository you want to deploy GitHub Pages is the same one as you are running your workflow).
    required: true
    default: ${{ github.token }}
  source-dir:
    description: Path of the directory you want to deploy.
    required: true

  target-repository:
    description: >
      The repository you want to deploy GitHub Pages to, in format of 'rajyan/preview-pages'.
      Defaults to the current repository you are running the workflow.
    required: false
    default: ${{ github.repository }}
  target-branch:
    description: The branch you want to deploy GitHub Pages to.
    required: false
    default: gh-pages
  target-dir:
    description: The directory you want to deploy in the GitHub Pages repository.
    required: false
  configured-dir:
    description: The directory configured in GitHub Pages repository as a source. (ex. /docs)
    required: false
  configured-domain:
    description: The custom domain configured in GitHub Pages repository.
    required: false

  pr-by-commit:
    description: >
      Whether to keep different pages by each commit SHA or overwrite per each pull request.
      If 'true' the deploy directory for pull request would be ${{ inputs.target-dir }}/pr-${{ github.event.number }}/${{ github.sha }}.
      If 'false' the directory would be ${{ inputs.target-dir }}/pr-${{ github.event.number }} and overwrites on each commit.
    required: false
    default: 'true'
  branch-by-commit:
    description: >
      Whether to keep different pages by each commit SHA or overwrite per each branch.
      If 'true' the deploy directory for pull request would be ${{ inputs.target-dir }}/${{ github.ref_name }}/${{ github.sha }}.
      If 'false' the directory would be ${{ inputs.target-dir }}/${{ github.ref_name }} and overwrites on each commit.
    required: false
    default: 'false'

  git-config-name:
    description: Username of the commit when deploying to the GitHub Pages publishing repository.
    required: false
    default: github-actions[bot]
  git-config-email:
    description: Email of the commit when deploying to the GitHub Pages publishing repository.
    required: false
    default: 41898282+github-actions[bot]@users.noreply.github.com
  comment:
    description: >
      Whether to comment the preview page url in a pull request and how.
      Valid choices are 'append', 'sticky', 'recreate', 'hide_and_recreate', 'none'.
      See https://github.com/marocchino/sticky-pull-request-comment for the options.
    required: false
    default: 'append'

runs:
  using: composite
  steps:
    - name: Set short sha
      id: short-sha
      run: echo "sha=$(echo ${{ github.sha }} | cut -c 1-7)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Set upload directory
      id: upload-dir
      run: echo "dir=${{ github.event_name == 'pull_request' && format('pr-{0}/{1}', github.event.number, steps.short-sha.outputs.sha) || github.ref_name }}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Checkout target repository
      uses: actions/checkout@v3
      with:
        path: preview-pages
        repository: ${{ inputs.pages-organization }}/${{ inputs.pages-repository }}
        token: ${{ inputs.github-token }}

    - name: Deploy ðŸš€
      working-directory: preview-pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: ${{ inputs.path }}
        token: ${{ inputs.token }}
        repository-name: ${{ inputs.repository }}
        branch: ${{ inputs.preview-pages-branch }}
        target-folder: ${{ inputs.preview-pages-dir }}
        git-config-name: ${{ inputs.git-config-name }}
        git-config-email: ${{ inputs.git-config-email }}

    - name: Comment preview link
      if: ${{ steps.diff-check.outputs.has-diff && inputs.comment && github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "[Deployed page ${{ steps.short-sha.outputs.sha }}](https://${{ inputs.pages-organization }}.github.io/${{ inputs.pages-repository }}/${{ steps.upload-dir.outputs.dir }})"
          })
