name: Preview Pages
description: Action to deploy GitHub Pages for each branch, pull request, commit

branding:
  icon: copy
  color: blue

inputs:
  token:
    description: >
      The GitHub App token or personal access token to access GitHub Pages publishing repository and commenting to the pull requests and branches.
      Defaults to the repository scoped GitHub token (Which means that the repository you want to deploy GitHub Pages is the same one as you are running your workflow).
    required: true
    default: ${{ github.token }}
  source-dir:
    description: Path of the directory you want to deploy.
    required: true

  target-repository:
    description: >
      The repository you want to deploy GitHub Pages to, in the format of 'rajyan/preview-pages'.
      Defaults to the current repository you are running the workflow.
    required: false
    default: ${{ github.repository }}
  target-branch:
    description: The branch you want to deploy GitHub Pages to.
    required: false
    default: gh-pages
  target-dir:
    description: |
      The directory you want to deploy in the GitHub Pages repository.
      Defaults the root directory.
    required: false
    default: /
  configured-dir:
    description: The directory configured in GitHub Pages repository as a source. (ex. /docs)
    required: false
    default: /
  configured-domain:
    description: The custom domain configured in GitHub Pages repository.
    required: false
  git-config-name:
    description: Username of the commit when deploying to the GitHub Pages publishing repository.
    required: false
    default: github-actions[bot]
  git-config-email:
    description: Email of the commit when deploying to the GitHub Pages publishing repository.
    required: false
    default: 41898282+github-actions[bot]@users.noreply.github.com

  # pull request event options
  pr-by-commit:
    description: |
      Whether to keep different pages by each commit SHA or overwrite per each pull request.
      If 'true' the deploy directory for pull request will be '{{ inputs.target-dir }}/pr-{{ github.event.number }}/{{ github.sha }}'.
      If 'false' the directory will be '{{ inputs.target-dir }}/pr-{{ github.event.number }}' and overwrites on each commit.
    required: false
    default: 'true'
  pr-comment:
    description: >
      Whether to comment the preview page url in a pull request and how.
      Valid choices are 'append', 'sticky', 'recreate', 'hide_and_recreate', 'none'.
      See https://github.com/marocchino/sticky-pull-request-comment for the options.
    required: false
    default: 'append'

  # push event options
  branch-by-commit:
    description: |
      Whether to keep different pages by each commit SHA or overwrite per each branch.
      If 'true' the deploy directory for pull request will be '{{ inputs.target-dir }}/{{ github.ref_name }}/{{ github.sha }}'.
      If 'false' the directory will be '{{ inputs.target-dir }}/{{ github.ref_name }}' and overwrites on each commit.
    required: false
    default: 'false'
  branch-comment:
    description: Whether to comment the preview page url on the branches commit.
    required: false
    default: 'true'

runs:
  using: composite
  steps:
    - name: Setup parameters
      id: params
      run: |
        short_sha=$(echo ${{ github.sha }} | cut -c 1-7)
        echo "short-sha=$short_sha" >> $GITHUB_OUTPUT
        
        if [ ${{ github.event_name == 'pull_request' }} = true ]; then
          upload_dir="pr-${{ github.event.number }}/$(${{ inputs.pr-by-commit }} && echo $short_sha || echo '')"
        else
          upload_dir="${{ github.ref_name }}/$(${{ inputs.branch-by-commit }} && echo $short_sha || echo '')"
        fi
        echo "upload-dir=$upload_dir" >> $GITHUB_OUTPUT
        
        page_path=$(realpath -m -s --relative-to "${{ inputs.configured-dir }}" "${{ inputs.target-dir }}/$upload_dir")
        org=$(echo "${{ inputs.target-repository }}" | cut -d "/" -f 1)
        repo=$(echo "${{ inputs.target-repository }}" | cut -d "/" -f 2)
        if [ -z "${{ inputs.configured-domain }}" ]; then
          echo "pages-url=${org}.github.io/${repo}/${page_path}" >> $GITHUB_OUTPUT
        else
          echo "pages-url=${{ inputs.configured-domain }}/${page_path}" >> $GITHUB_OUTPUT
        fi
        
        echo "${{ inputs.pr-comment }}=true" >> $GITHUB_OUTPUT

      shell: bash

    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        token: ${{ inputs.token }}
        repository-name: ${{ inputs.target-repository }}
        branch: ${{ inputs.target-branch }}
        folder: ${{ inputs.source-dir }}
        target-folder: ${{ inputs.target-dir }}/${{ steps.params.outputs.upload-dir }}
        git-config-name: ${{ inputs.git-config-name }}
        git-config-email: ${{ inputs.git-config-email }}

    - name: Comment preview link to pull request
      uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ github.event_name == 'pull_request' && !steps.params.outputs.none }}
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      with:
        message: |
          "[Deployed page for ${{ steps.params.outputs.short-sha }}](https://${{ steps.params.outputs.pages-url }})"
        append: ${{ steps.params.outputs.append }}
        recreate: ${{ steps.params.outputs.recreate }}
        hide_and_recreate: ${{ steps.params.outputs.hide_and_recreate }}

    - name: Comment preview link to commit
      uses: actions/github-script@v6
      if: ${{ github.event_name == 'push' && inputs.branch-comment }}
      with:
        github-token: ${{ inputs.token }}
        script: |
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: "[Deployed page for ${{ steps.params.outputs.short-sha }}](https://${{ steps.params.outputs.pages-url }})"
          })
